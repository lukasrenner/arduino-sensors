Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
                              lcd.o (__do_copy_data)
/usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
                              i2c.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
LOAD dht.o
LOAD font.o
LOAD i2c.o
LOAD lcd.o
LOAD sensor.o
START GROUP
LOAD /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/libatmega328p.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xcc2
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
 .progmem.data  0x0000000000000068      0x284 font.o
                0x0000000000000068                special_char
                0x000000000000007c                ssd1306oled_font
 .progmem.data  0x00000000000002ec       0x1b lcd.o
                0x00000000000002ec                init_sequence
                0x0000000000000308                . = ALIGN (0x2)
 *fill*         0x0000000000000307        0x1 
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000308                __ctors_start = .
 *(.ctors)
                0x0000000000000308                __ctors_end = .
                0x0000000000000308                __dtors_start = .
 *(.dtors)
                0x0000000000000308                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000308        0x0 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000308                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000308        0xc /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000314       0x16 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000314                __do_copy_data
 .init4         0x000000000000032a       0x10 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000032a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000033a        0x8 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x0000000000000342        0x4 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000342                __vector_22
                0x0000000000000342                __vector_1
                0x0000000000000342                __vector_24
                0x0000000000000342                __vector_12
                0x0000000000000342                __bad_interrupt
                0x0000000000000342                __vector_6
                0x0000000000000342                __vector_3
                0x0000000000000342                __vector_23
                0x0000000000000342                __vector_25
                0x0000000000000342                __vector_11
                0x0000000000000342                __vector_13
                0x0000000000000342                __vector_17
                0x0000000000000342                __vector_19
                0x0000000000000342                __vector_7
                0x0000000000000342                __vector_5
                0x0000000000000342                __vector_4
                0x0000000000000342                __vector_9
                0x0000000000000342                __vector_2
                0x0000000000000342                __vector_21
                0x0000000000000342                __vector_15
                0x0000000000000342                __vector_8
                0x0000000000000342                __vector_14
                0x0000000000000342                __vector_10
                0x0000000000000342                __vector_16
                0x0000000000000342                __vector_18
                0x0000000000000342                __vector_20
 .text          0x0000000000000346        0xc dht.o
                0x0000000000000346                dht_init
                0x000000000000034e                dht_transmit
 .text          0x0000000000000352        0x0 font.o
 .text          0x0000000000000352       0xec i2c.o
                0x0000000000000352                i2c_init
                0x0000000000000364                i2c_start
                0x00000000000003b4                i2c_stop
                0x00000000000003bc                i2c_byte
                0x00000000000003e6                i2c_readAck
                0x0000000000000412                i2c_readNAck
 .text          0x000000000000043e      0x868 lcd.o
                0x000000000000043e                lcd_command
                0x000000000000048a                lcd_data
                0x00000000000004ce                lcd_gotoxy
                0x000000000000056e                lcd_goto_xpix_y
                0x0000000000000606                lcd_clrscr
                0x0000000000000726                lcd_init
                0x00000000000007ac                lcd_home
                0x000000000000081c                lcd_invert
                0x000000000000083e                lcd_sleep
                0x0000000000000860                lcd_set_contrast
                0x0000000000000882                lcd_putc
                0x0000000000000c5e                lcd_charMode
                0x0000000000000c64                lcd_puts
                0x0000000000000c82                lcd_puts_p
 .text          0x0000000000000ca6        0x0 sensor.o
 .text          0x0000000000000ca6        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000ca6        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000ca6        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000ca6                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000ca6       0x18 sensor.o
                0x0000000000000ca6                main
 .text.libgcc.mul
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000cbe                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000cbe        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
                0x0000000000000cbe                exit
                0x0000000000000cbe                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000cbe        0x4 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000cc2                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000cc2                _etext = .

.data           0x0000000000800100       0x12 load address 0x0000000000000cc2
                0x0000000000800100                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x0 dht.o
 .data          0x0000000000800100        0x0 font.o
 .data          0x0000000000800100        0x0 i2c.o
 .data          0x0000000000800100        0x1 lcd.o
 .data          0x0000000000800101        0x0 sensor.o
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800101       0x11 sensor.o
 *(.gnu.linkonce.r*)
                0x0000000000800112                . = ALIGN (0x2)
                0x0000000000800112                _edata = .
                0x0000000000800112                PROVIDE (__data_end = .)

.bss            0x0000000000800112        0x3
                0x0000000000800112                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x0000000000800112        0x0 dht.o
 .bss           0x0000000000800112        0x0 font.o
 .bss           0x0000000000800112        0x1 i2c.o
                0x0000000000800112                I2C_ErrorCode
 .bss           0x0000000000800113        0x2 lcd.o
 .bss           0x0000000000800115        0x0 sensor.o
 .bss           0x0000000000800115        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800115        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800115        0x0 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800115                PROVIDE (__bss_end = .)
                0x0000000000000cc2                __data_load_start = LOADADDR (.data)
                0x0000000000000cd4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800115        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800115                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x204
 *(.stab)
 .stab          0x0000000000000000       0x78 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
 .stab          0x0000000000000078       0xd8 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000000150       0xb4 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000       0x9d
 *(.stabstr)
 .stabstr       0x0000000000000000       0x9d /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x23
 *(.comment)
 .comment       0x0000000000000000       0x23 dht.o
                                         0x24 (size before relaxing)
 .comment       0x0000000000000023       0x24 font.o
 .comment       0x0000000000000023       0x24 i2c.o
 .comment       0x0000000000000023       0x24 lcd.o
 .comment       0x0000000000000023       0x24 sensor.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x98
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 dht.o
 .debug_aranges
                0x0000000000000020       0x18 font.o
 .debug_aranges
                0x0000000000000038       0x20 i2c.o
 .debug_aranges
                0x0000000000000058       0x20 lcd.o
 .debug_aranges
                0x0000000000000078       0x20 sensor.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x1fa1
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .debug_info    0x00000000000005f4      0x100 dht.o
 .debug_info    0x00000000000006f4      0x104 font.o
 .debug_info    0x00000000000007f8      0x1b7 i2c.o
 .debug_info    0x00000000000009af     0x14fc lcd.o
 .debug_info    0x0000000000001eab       0xf6 sensor.o

.debug_abbrev   0x0000000000000000      0xbda
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .debug_abbrev  0x00000000000005a2       0xc1 dht.o
 .debug_abbrev  0x0000000000000663       0x68 font.o
 .debug_abbrev  0x00000000000006cb       0xd7 i2c.o
 .debug_abbrev  0x00000000000007a2      0x3b8 lcd.o
 .debug_abbrev  0x0000000000000b5a       0x80 sensor.o

.debug_line     0x0000000000000000     0x1ac0
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .debug_line    0x000000000000001d       0xca dht.o
 .debug_line    0x00000000000000e7       0x31 font.o
 .debug_line    0x0000000000000118      0x417 i2c.o
 .debug_line    0x000000000000052f     0x14f7 lcd.o
 .debug_line    0x0000000000001a26       0x9a sensor.o

.debug_frame    0x0000000000000000      0x370
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x34 dht.o
 .debug_frame   0x0000000000000034       0x74 i2c.o
 .debug_frame   0x00000000000000a8      0x2a4 lcd.o
 .debug_frame   0x000000000000034c       0x24 sensor.o

.debug_str      0x0000000000000000      0x4be
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .debug_str     0x0000000000000208       0xf9 dht.o
                                        0x12d (size before relaxing)
 .debug_str     0x0000000000000301       0x25 font.o
                                        0x11b (size before relaxing)
 .debug_str     0x0000000000000326       0x6c i2c.o
                                        0x16f (size before relaxing)
 .debug_str     0x0000000000000392      0x11e lcd.o
                                        0x291 (size before relaxing)
 .debug_str     0x00000000000004b0        0xe sensor.o
                                        0x121 (size before relaxing)

.debug_loc      0x0000000000000000     0x1711
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x2a dht.o
 .debug_loc     0x000000000000002a      0x23a i2c.o
 .debug_loc     0x0000000000000264     0x14ad lcd.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000      0x330
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000      0x320 lcd.o
 .debug_ranges  0x0000000000000320       0x10 sensor.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(sensor.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
I2C_ErrorCode                                     i2c.o
__FUSE_REGION_LENGTH__                            /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__bad_interrupt                                   /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__bss_end                                         /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_clear_bss.o)
                                                  lcd.o
                                                  i2c.o
__do_copy_data                                    /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_copy_data.o)
                                                  sensor.o
                                                  lcd.o
__heap_end                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__init                                            /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__stack                                           /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_1                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_10                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_11                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_12                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_13                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_14                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_15                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_16                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_17                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_18                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_19                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_2                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_20                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_21                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_22                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_23                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_24                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_25                                       /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_3                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_4                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_5                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_6                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_7                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_8                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_9                                        /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vector_default                                  /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
__vectors                                         /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
_exit                                             /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
dht_init                                          dht.o
dht_transmit                                      dht.o
exit                                              /usr/lib/gcc/avr/10.2.0/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
i2c_byte                                          i2c.o
                                                  lcd.o
i2c_init                                          i2c.o
                                                  lcd.o
i2c_readAck                                       i2c.o
i2c_readNAck                                      i2c.o
i2c_start                                         i2c.o
                                                  lcd.o
i2c_stop                                          i2c.o
                                                  lcd.o
init_sequence                                     lcd.o
lcd_charMode                                      lcd.o
lcd_clrscr                                        lcd.o
lcd_command                                       lcd.o
lcd_data                                          lcd.o
lcd_goto_xpix_y                                   lcd.o
lcd_gotoxy                                        lcd.o
                                                  sensor.o
lcd_home                                          lcd.o
lcd_init                                          lcd.o
                                                  sensor.o
lcd_invert                                        lcd.o
lcd_putc                                          lcd.o
lcd_puts                                          lcd.o
                                                  sensor.o
lcd_puts_p                                        lcd.o
lcd_set_contrast                                  lcd.o
lcd_sleep                                         lcd.o
main                                              sensor.o
                                                  /usr/lib/gcc/avr/10.2.0/../../../../avr/lib/avr5/crtatmega328p.o
special_char                                      font.o
                                                  lcd.o
ssd1306oled_font                                  font.o
                                                  lcd.o
